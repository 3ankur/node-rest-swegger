{"version":3,"sources":["../../../api/controllers/stocks.js"],"names":["DAO","Swagger","dao","getInstance","express","require","router","Router","get","req","res","next","response","retrieveAll","validateModel","send","retrieve","parseInt","params","id","put","body","update","lastUpdate","post","create","module","exports"],"mappings":";;AAAA;;IAAYA,G;;AACZ;;IAAYC,O;;;;AAEZ,IAAMC,MAAMF,IAAIG,WAAJ,CAAgB,QAAhB,CAAZ;;AAEA,IAAMC,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,SAASF,QAAQG,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;AAeAD,OAAOE,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClC,MAAMC,WAAWV,IAAIW,WAAJ,EAAjB;AACAZ,UAAQa,aAAR,CAAsB,OAAtB,EAA+BF,QAA/B;AACAF,MAAIK,IAAJ,CAASH,QAAT;AACD,CAJD;;AAMA;;;;;;;;;;;;;;;;;;;;;AAqBAN,OAAOE,GAAP,CAAW,MAAX,EAAmB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACrC,MAAMC,WAAWV,IAAIc,QAAJ,CAAaC,SAASR,IAAIS,MAAJ,CAAWC,EAApB,EAAwB,EAAxB,CAAb,CAAjB;AACAlB,UAAQa,aAAR,CAAsB,OAAtB,EAA+BF,QAA/B;AACAF,MAAIK,IAAJ,CAASH,QAAT;AACD,CAJD;;AAMA;;;;;;;;;;;;AAYA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BAN,OAAOc,GAAP,CAAW,MAAX,EAAmB,UAACX,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACrCV,UAAQa,aAAR,CAAsB,WAAtB,EAAmCL,IAAIY,IAAvC;AACA,MAAMT,WAAWV,IAAIoB,MAAJ,CAAWL,SAASR,IAAIS,MAAJ,CAAWC,EAApB,EAAwB,EAAxB,CAAX,EAAwCV,IAAIY,IAAJ,CAASE,UAAjD,CAAjB;AACAtB,UAAQa,aAAR,CAAsB,OAAtB,EAA+BF,QAA/B;AACAF,MAAIK,IAAJ,CAASH,QAAT;AACD,CALD;;AAOA;;;;;;;;;;;;;;;;;;;;;;AAsBAN,OAAOkB,IAAP,CAAY,GAAZ,EAAiB,UAACf,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACnCV,UAAQa,aAAR,CAAsB,OAAtB,EAA+BL,IAAIY,IAAnC;AACA,MAAMT,WAAWV,IAAIuB,MAAJ,CAAWhB,IAAIY,IAAf,CAAjB;AACApB,UAAQa,aAAR,CAAsB,OAAtB,EAA+BF,QAA/B;AACAF,MAAIK,IAAJ,CAASH,QAAT;AACD,CALD;;AAOAc,OAAOC,OAAP,GAAiBrB,MAAjB","file":"stocks.js","sourcesContent":["import * as DAO from '../daos/'\r\nimport * as Swagger from './swagger'\r\n\r\nconst dao = DAO.getInstance('memory')\r\n\r\nconst express = require('express')\r\nconst router = express.Router()\r\n\r\n/**\r\n * @swagger\r\n * /stocks:\r\n *   get:\r\n *     description: Retrieve the full list of stocks\r\n *     tags:\r\n *       - stocks\r\n *     produces:\r\n *       - application/json\r\n *     responses:\r\n *       200:\r\n *         description: stocks12\r\n *         schema:\r\n *           $ref: '#/definitions/Stocks1'\r\n */\r\nrouter.get('/', (req, res, next) => {\r\n  const response = dao.retrieveAll()\r\n  Swagger.validateModel('Stock', response)\r\n  res.send(response)\r\n})\r\n\r\n/**\r\n * @swagger\r\n * /stocks/{id}:\r\n *   get:\r\n *     description: Retrieve an specific stock\r\n *     tags:\r\n *       - stocks\r\n *     produces:\r\n *       - application/json\r\n *     parameters:\r\n *       - name: id\r\n *         description: id of the stock to retrieve\r\n *         in: path\r\n *         required: true\r\n *         type: number\r\n *     responses:\r\n *       200:\r\n *         description: stock\r\n *         schema:\r\n *           $ref: '#/definitions/Stock'\r\n */\r\nrouter.get('/:id', (req, res, next) => {\r\n  const response = dao.retrieve(parseInt(req.params.id, 10))\r\n  Swagger.validateModel('Stock', response)\r\n  res.send(response)\r\n})\r\n\r\n/**\r\n * @swagger\r\n * definitions:\r\n *   TimeStamp:\r\n *     type: object\r\n *     required:\r\n *       - lastUpdate\r\n *     properties:\r\n *       lastUpdate:\r\n *         type: number\r\n */\r\n\r\n/**\r\n * @swagger\r\n * /stocks/{id}:\r\n *   put:\r\n *     description: Update lastUpdate field of an stock\r\n *     tags:\r\n *       - stocks\r\n *     produces:\r\n *       - application/json\r\n *     parameters:\r\n *       - name: id\r\n *         description: id of the stock to update\r\n *         in: path\r\n *         required: true\r\n *         type: number\r\n *       - name: lastUpdate\r\n *         description: timestamp to use as stock's lastUpdate field\r\n *         in: body\r\n *         required: true\r\n *         schema:\r\n *           $ref: '#/definitions/TimeStamp'\r\n *     responses:\r\n *       200:\r\n *         description: updated stock\r\n *         schema:\r\n *           $ref: '#/definitions/Stock'\r\n */\r\nrouter.put('/:id', (req, res, next) => {\r\n  Swagger.validateModel('TimeStamp', req.body)\r\n  const response = dao.update(parseInt(req.params.id, 10), req.body.lastUpdate)\r\n  Swagger.validateModel('Stock', response)\r\n  res.send(response)\r\n})\r\n\r\n/**\r\n * @swagger\r\n * /stocks:\r\n *   post:\r\n *     description: Create a new stock\r\n *     tags:\r\n *       - stocks\r\n *     produces:\r\n *       - application/json\r\n *     parameters:\r\n *       - name: stock\r\n *         description: Stock object\r\n *         in: body\r\n *         required: true\r\n *         schema:\r\n *           $ref: '#/definitions/Stock'\r\n *     responses:\r\n *       200:\r\n *         description: new stock\r\n *         schema:\r\n *           $ref: '#/definitions/Stock'\r\n */\r\nrouter.post('/', (req, res, next) => {\r\n  Swagger.validateModel('Stock', req.body)\r\n  const response = dao.create(req.body)\r\n  Swagger.validateModel('Stock', response)\r\n  res.send(response)\r\n})\r\n\r\nmodule.exports = router\r\n"]}